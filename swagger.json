{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/users/me": {
      "get": {
        "operationId": "Get me",
        "summary": "Get me",
        "tags": [
          "Users"
        ],
        "description": "Get me",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get me"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/v1/users/update-password": {
      "put": {
        "operationId": "Update password",
        "summary": "Update password",
        "tags": [
          "Users"
        ],
        "description": "Update password",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update password"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "operationId": "Sign up",
        "summary": "Sign up",
        "tags": [
          "Auth"
        ],
        "description": "Sign up",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sign up"
          }
        }
      }
    },
    "/api/v1/auth/signin": {
      "post": {
        "operationId": "Sign in",
        "summary": "Sign in",
        "tags": [
          "Auth"
        ],
        "description": "Sign in",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in"
          }
        }
      }
    },
    "/api/v1/auth/verify-email-token": {
      "post": {
        "operationId": "Verify email token",
        "summary": "Verify email token",
        "tags": [
          "Auth"
        ],
        "description": "Verify email token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verify email"
          }
        }
      }
    },
    "/api/v1/products": {
      "get": {
        "operationId": "ProductController_getAll",
        "summary": "Get products",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "category|($eq|$gt|$lt|$like)|value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by name of product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Prefix default is ascending, Add - for descending",
            "example": "-price",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Default: 10",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Default: 1",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get products"
          }
        }
      },
      "post": {
        "operationId": "ProductController_createProduct",
        "summary": "Create new product",
        "tags": [
          "Products"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create new product"
          }
        }
      }
    },
    "/api/v1/products/{slug}": {
      "get": {
        "operationId": "ProductController_getProductById",
        "summary": "Get product by slug",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get product"
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "put": {
        "operationId": "ProductController_updateProduct",
        "summary": "Update product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update product"
          }
        }
      },
      "delete": {
        "operationId": "ProductController_deleteProduct",
        "summary": "Delete product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete product"
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "operationId": "CategoryController_getAll",
        "summary": "Get categories",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search by name of category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Prefix default is ascending, Add - for descending",
            "example": "-name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get categories"
          }
        }
      },
      "post": {
        "operationId": "CategoryController_createCategory",
        "summary": "Create new category",
        "tags": [
          "Categories"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create new category"
          }
        }
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "operationId": "CategoryController_getCategoryById",
        "summary": "Get category by id",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get category"
          }
        }
      },
      "put": {
        "operationId": "CategoryController_updateCategory",
        "summary": "Update category",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update category"
          }
        }
      },
      "delete": {
        "operationId": "CategoryController_deleteCategory",
        "summary": "Delete category",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete category"
          }
        }
      }
    },
    "/api/v1/sizes": {
      "get": {
        "operationId": "SizeController_getAll",
        "summary": "Get sizes",
        "tags": [
          "Sizes"
        ],
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get sizes"
          }
        }
      },
      "post": {
        "operationId": "SizeController_createSize",
        "summary": "Create new size",
        "tags": [
          "Sizes"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSizeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create new size"
          }
        }
      }
    },
    "/api/v1/sizes/{id}": {
      "get": {
        "operationId": "SizeController_getSizeById",
        "summary": "Get size by id",
        "tags": [
          "Sizes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get size"
          }
        }
      },
      "put": {
        "operationId": "SizeController_updateSize",
        "summary": "Update size",
        "tags": [
          "Sizes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSizeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update size"
          }
        }
      },
      "delete": {
        "operationId": "SizeController_deleteSize",
        "summary": "Delete size",
        "tags": [
          "Sizes"
        ],
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete size"
          }
        }
      }
    },
    "/api/v1/orders/mine": {
      "get": {
        "operationId": "OrderController_findAll",
        "summary": "Get all orders",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Default: 10",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Default: 1",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all orders"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/v1/orders": {
      "post": {
        "operationId": "OrderController_create",
        "summary": "Get all orders",
        "tags": [
          "Orders"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created."
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/api/v1/payments/notify": {
      "post": {
        "operationId": "PaymentController_handleNotify",
        "summary": "Notify payment",
        "tags": [
          "Payments"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Notify payment"
          }
        }
      }
    }
  },
  "info": {
    "title": "Eshopping API",
    "description": "Eshopping services",
    "version": "1.0.0",
    "contact": {
      "name": "Ích Hòa",
      "url": "https://ichhoa.dev/",
      "email": "ichhoa129@gmail.com"
    }
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "token",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "SignUpCredentialsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "AuthCredentialsDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "VerifyEmailTokenDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "QuantityOfSize": {
        "type": "object",
        "properties": {
          "sizeId": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "sizeId",
          "quantity"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "categoryId": {
            "type": "number"
          },
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuantityOfSize"
            }
          }
        },
        "required": [
          "name",
          "description",
          "price",
          "unit",
          "categoryId",
          "sizes"
        ]
      },
      "productSize": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "quantity"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "categoryId": {
            "type": "number"
          },
          "productSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/productSize"
            }
          }
        },
        "required": [
          "name",
          "description",
          "price",
          "unit",
          "status",
          "categoryId",
          "productSizes"
        ]
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateSizeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateSizeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ProductItems": {
        "type": "object",
        "properties": {
          "productSizeId": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "productSizeId",
          "quantity"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductItems"
            }
          },
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "items",
          "address",
          "name",
          "phone",
          "note"
        ]
      }
    }
  }
}